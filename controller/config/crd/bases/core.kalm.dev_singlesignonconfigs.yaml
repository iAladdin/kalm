---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: singlesignonconfigs.core.kalm.dev
spec:
  group: core.kalm.dev
  names:
    kind: SingleSignOnConfig
    listKind: SingleSignOnConfigList
    plural: singlesignonconfigs
    singular: singlesignonconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Domain of dex
      jsonPath: .spec.domain
      name: Domain
      type: string
    - jsonPath: .spec.issuer
      name: Issuer
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SingleSignOnConfig is the Schema for the singlesignonconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SingleSignOnConfigSpec defines the desired state of SingleSignOnConfig
            properties:
              alwaysShowLoginScreen:
                type: boolean
              connectors:
                items:
                  properties:
                    config:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    id:
                      type: string
                    name:
                      type: string
                    type:
                      type: string
                  required:
                  - config
                  - id
                  - name
                  - type
                  type: object
                type: array
              domain:
                description: The following are for kalm dex oidc provider
                type: string
              externalEnvoyExtAuthz:
                description: Create service entry if the ext_authz service is running
                  out of istio mesh
                properties:
                  host:
                    type: string
                  port:
                    type: integer
                  scheme:
                    type: string
                required:
                - host
                - port
                - scheme
                type: object
              idTokenExpirySeconds:
                format: int32
                type: integer
              issuer:
                description: These four are for arbitrary oidc provider
                type: string
              issuerClientId:
                type: string
              issuerClientSecret:
                type: string
              jwksUri:
                type: string
              port:
                type: integer
              showApproveScreen:
                type: boolean
              temporaryUser:
                properties:
                  email:
                    type: string
                  passwordHash:
                    description: bcrypt hash of the password
                    type: string
                  userId:
                    type: string
                  username:
                    type: string
                required:
                - email
                - passwordHash
                - userId
                - username
                type: object
              useHttp:
                description: Default scheme is https, this flag is to change it to
                  http
                type: boolean
            type: object
          status:
            description: SingleSignOnConfigStatus defines the observed state of SingleSignOnConfig
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
